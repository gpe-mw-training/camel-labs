<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
  	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
	   ">

    <camelContext xmlns="http://camel.apache.org/schema/spring">

        <endpoint id="endpointQueueIncomingTxPayments" uri="activemq:queue:incomingTxPayments"/>
        <endpoint id="endpointQueueOutgoingTxPayments" uri="activemq:queue:outgoingTxPayments"/>
        <endpoint id="endpointfileIn" uri="file:src/main/data/in?noop=true"/>
        <endpoint id="endpointfileOut" uri="file:src/main/data/out"/>

        <dataFormats>
            <jaxb id="jaxb" contextPath="com.redhat.training.payment" prettyPrint="true"/>
        </dataFormats>

        <!-- 1. Seeds the queue with data. -->
        <route>
            <from ref="endpointfileIn"/>
            <to ref="endpointQueueIncomingTxPayments"/>
        </route>

        <!-- 2  PaymentCurrencyWithTxRouter -->
        <route>
            <from ref="endpointQueueIncomingTxPayments"/>
            <transacted ref="POLICY_PROPAGATION_REQUIRED"/>
            <log message="Received Message ${body}"/>
            <idempotentConsumer messageIdRepositoryRef="processedMessagesRepository">
                <header>CamelFileNameOnly</header>
                <unmarshal ref="jaxb"/>
                <bean ref="paymentBean" method="insert"/>
                <marshal ref="jaxb"/>
                <log message="Save Message ${body}"/>
                <to uri="endpointQueueOutgoingTxPayments"/>
            </idempotentConsumer>
        </route>

        <!-- 3 -->
        <route>
            <from uri="activemq:queue:outgoingTxPayments"/>
            <convertBodyTo type="java.lang.String"/>
            <to ref="endpointfileOut"/>
        </route>
    </camelContext>

<!--    <bean id="currencyWithTxChecker" class="com.redhat.gpte.training.camel.h2.PaymentCurrencyWithTxRouter">
        <property name="dataSource" ref="dataSource"/>
    </bean>-->

    <bean id="paymentBean" class="com.redhat.gpte.training.camel.PaymentBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="jmsTransactionManager"
          class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>

    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL"
                  value="tcp://localhost:61616?jms.redeliveryPolicy.maximumRedeliveries=3&amp;jms.redeliveryPolicy.initialRedeliveryDelay=500"/>
    </bean>

    <bean name="activemq" class="org.apache.camel.component.jms.JmsComponent">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="transactionManager" ref="jmsTransactionManager"/>
        <property name="transacted" value="true"/>
    </bean>

    <!--  PostgreSQL
    <bean id="postgres-ds" class="org.postgresql.ds.PGPoolingDataSource">
        <property name="serverName" value="localhost"/>
        <property name="databaseName" value="fuse_demo"/>
        <property name="portNumber" value="0"/>
        <property name="user" value="fuse_user"/>
        <property name="password" value="fuse_user"/>
        <property name="dataSourceName" value="postgres-ds"/>
        <property name="initialConnections" value="1"/>
        <property name="maxConnections" value="10"/>
      </bean>
    -->

    <!-- MySQL
        <bean id="datasource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/fuse_demo"/>
        <property name="username" value="root"/>
        <property name="password" value=""/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
        <property name="minIdle" value="2"/>
    </bean>
    -->

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:tcp://localhost:9123/jbossfuse-demo"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
        <property name="minIdle" value="2"/>
    </bean>

    <bean name="jdbcTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    <bean id="POLICY_PROPAGATION_REQUIRED"
          class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="jdbcTransactionManager"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>-->

    <bean id="POLICY_PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="jdbcTransactionManager"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>

    <bean id="processedMessagesRepository" class="com.redhat.gpte.training.camel.h2.JdbcMessageIdRepository">
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>
